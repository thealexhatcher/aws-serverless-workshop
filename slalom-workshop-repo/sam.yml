#SAM Template for Lambda Functions, API Gateways, Tables, and X-Ray
AWSTemplateFormatVersion: '2010-09-09'
Transform: AWS::Serverless-2016-10-31
Description: AWS Workshop Example
Resources:
  ApiGateway:
    Type: AWS::Serverless::Api
    Properties:
      StageName: Release
      DefinitionBody:
        swagger: 2.0
        info:
          title: !Ref AWS::StackName
        paths: 
          /resource/{resourceId}:
            get:
              x-amazon-apigateway-integration:
                httpMethod: POST
                type: aws_proxy
                uri: !Sub arn:aws:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/${GetFunction.Arn}/invocations
              responses: {}
            put:
              x-amazon-apigateway-integration:
                httpMethod: POST
                type: aws_proxy
                uri: !Sub arn:aws:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/${PutFunction.Arn}/invocations
              responses: {}
            delete:
              x-amazon-apigateway-integration:
                httpMethod: POST
                type: aws_proxy
                uri: !Sub arn:aws:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/${DeleteFunction.Arn}/invocations
              responses: {}

  GetFunction:
    Type: AWS::Serverless::Function
    Properties:
      Tracing: Active
      Handler: index.get
      Runtime: nodejs6.10
      CodeUri: .
      Policies: AmazonDynamoDBReadOnlyAccess
      Environment:
        Variables:
          TABLE_NAME: !Ref Table
      Events:
        GetResource:
          Type: Api
          Properties:
            Path: /resource/{resourceId}
            Method: get
            RestApiId: !Ref ApiGateway

  PutFunction:
    Type: AWS::Serverless::Function
    Properties:
      Tracing: Active
      Handler: index.put
      Runtime: nodejs6.10
      CodeUri: .
      Policies: AmazonDynamoDBFullAccess
      Environment:
        Variables:
          TABLE_NAME: !Ref Table
      Events:
        PutResource:
          Type: Api
          Properties:
            Path: /resource/{resourceId}
            Method: put
            RestApiId: !Ref ApiGateway

  DeleteFunction:
    Type: AWS::Serverless::Function
    Properties:
      Tracing: Active
      Handler: index.delete
      Runtime: nodejs6.10
      CodeUri: .
      Policies: AmazonDynamoDBFullAccess
      Environment:
        Variables:
          TABLE_NAME: !Ref Table
      Events:
        DeleteResource:
          Type: Api
          Properties:
            Path: /resource/{resourceId}
            Method: delete
            RestApiId: !Ref ApiGateway

  Table:
    Type: AWS::Serverless::SimpleTable

Outputs: 
  API: 
    Description: API Gateway ID
    Value: !Ref ApiGateway